Eliminated node at line 744: if (meta.is_overlay_ip_v6 == 1) {
Eliminated node at line 762: if (meta.direction == dash_direction_t.OUTBOUND) {
Eliminated node at line 833: if (meta.is_overlay_ip_v6 == 1) {
Eliminated node at line 837: if (meta.is_overlay_ip_v6 == 0) {
Eliminated node at line 895: if (meta.is_overlay_ip_v6 == 1) {
Eliminated node at line 899: if (meta.is_overlay_ip_v6 == 0) {
Eliminated node at line 545: meta.encap_data.underlay_dip = (underlay_dip == 0 ? meta.encap_data.original_overlay_dip : (IPv4Address)underlay_dip);
Eliminated node at line 546: meta.encap_data.underlay_sip = (underlay_sip == 0 ? meta.encap_data.original_overlay_sip : (IPv4Address)underlay_sip);
Eliminated node at line 576: if (use_dst_vnet_vni == 1) {
Eliminated node at line 664: meta.dropped = true;
Eliminated node at line 665: } else if (packet_action == 1) {
Eliminated node at line 913: if (vip.apply().hit) {
Eliminated node at line 913: if (vip.apply().hit) {
Replaced node at line 916: direction_lookup.apply(); with const default_action = set_inbound_direction;
Eliminated node at line 917: appliance.apply();
Eliminated node at line 918: meta.eni_addr = (meta.direction == dash_direction_t.OUTBOUND ? hdr.inner_ethernet.src_addr : hdr.inner_ethernet.dst_addr);
Replaced node at line 919: eni_ether_address_map.apply(); with const default_action = deny;
Eliminated node at line 921: vxlan_decap(hdr);
Eliminated node at line 924: vxlan_decap_pa_validate: {
Replaced node at line 951: eni.apply(); with const default_action = deny;
Eliminated node at line 955: acl_group.apply();
Eliminated node at line 957: outbound.apply(hdr, meta);
Eliminated node at line (unknown): 
Eliminated node at line 457: if (meta.stage1_dash_acl_group_id != 0) {
Eliminated node at line 467: if (meta.stage2_dash_acl_group_id != 0) {
Eliminated node at line 477: if (meta.stage3_dash_acl_group_id != 0) {
Eliminated node at line 682: underlay_routing.apply();
Eliminated node at line 963: if (meta.meter_policy_en == 1) {
Eliminated node at line 969: meta.meter_class = meta.policy_meter_class;
Eliminated node at line 977: meter_bucket.apply();
Eliminated node at line 979: meter_bucket_outbound.count(meta.meter_bucket_index);
Eliminated node at line 983: eni_meter.apply();
