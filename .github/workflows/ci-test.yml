name: "test-flay"

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# Cancel any preceding run on the pull request.
concurrency:
  group: test-flay-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  # Build and test Flay on Ubuntu 22.04.
  build-and-test-flay:
    name: Build and test Flay (P4TOOLS_FLAY_WITH_GRPC=${{ matrix.use_grpc }})
    strategy:
      fail-fast: false
      matrix:
        use_grpc: [ON, OFF]
    runs-on: ubuntu-22.04
    env:
      CTEST_PARALLEL_LEVEL: 4
      IMAGE_TYPE: test
      CMAKE_UNITY_BUILD: ON
      ENABLE_TEST_TOOLS: ON
      CMAKE_FLAGS: "-DP4TOOLS_FLAY_WITH_GRPC=${{ matrix.use_grpc }} "
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: test-flay-${{ runner.os }}
          max-size: 1000M

      - name: Pull P4C and link Flay.
        run: |
          git clone --recurse-submodules -b fruffy/flay -j2 https://github.com/fruffy/p4c/ $GITHUB_WORKSPACE/../p4c
          ln -sf $GITHUB_WORKSPACE $GITHUB_WORKSPACE/../p4c/backends/p4tools/modules/

      - name: Install gRPC deps
        if: ${{ matrix.use_grpc == 'ON' }}
        run: sudo apt-get install libc-ares-dev libre2-dev # Needed for gRPC.

      - name: Build (Ubuntu 22.04)
        run: |
          ENABLE_WERROR=OFF tools/ci-build.sh
        working-directory: ../p4c

      - name: Test
        if: ${{ matrix.use_grpc == 'OFF'}}
        run: |
          ctest -R flay- --output-on-failure --schedule-random
        working-directory: ../p4c/build
